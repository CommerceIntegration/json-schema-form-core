{"version":3,"sources":["webpack:///webpack/bootstrap 95a44b44d9c25bbc21fc","webpack:///./src/lib/sf-path.js","webpack:///./src/lib/canonical-title-map.js","webpack:///./~/objectpath/index.js","webpack:///./src/lib/merge.js","webpack:///./src/lib/schema-defaults.js","webpack:///./src/lib/select.js","webpack:///./src/lib/traverse.js","webpack:///./src/lib/validate.js","webpack:///./~/objectpath/lib/ObjectPath.js","webpack:///external \"tv4\"","webpack:///./src/lib/index.js"],"names":["name","key","separator","formName","omitNumbers","fieldKey","slice","fieldSeparator","filter","currentKey","length","join","titleMap","originalEnum","Array","isArray","canonical","forEach","value","push","Object","keys","merge","lookup","form","options","readonly","asyncTemplates","map","obj","parse","canonicalTitleMap","strid","stringify","schemaDefaults","attr","undefined","items","tabs","tab","type","schema","template","templateUrl","stripNullType","enumToTitleMap","enm","defaultFormDefinition","schemaTypes","rules","def","innerDefaultFormDefinition","childName","childSchema","childOptions","i","assign","stdFormObj","f","global","formDefaults","supressPropertyTitles","title","description","required","maxLength","maxlength","minLength","minlength","readOnly","minimum","exclusiveMinimum","maximum","exclusiveMaximum","validationMessage","enumNames","ngModelOptions","text","path","number","integer","checkbox","select","checkboxes","fieldset","defaultFormDef","properties","ignore","indexOf","array","arrPath","createDefaults","string","object","boolean","defaultForm","defaultSchemaTypes","globalOptions","Error","numRe","projection","valueToSet","parts","test","tmp","traverseSchema","fn","ignoreArrays","traverse","schemaObject","processorFunction","pathArray","currentPath","traverseForm","validate","valid","wrap","propName","valueWrap","tv4","validateResult","sfPath"],"mappings":"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AAhB;AACA,MAAI,CAAC,CAACpG,KAAN,EAAa;AACXoG,cAAUD,QAAV,IAAsBnG,KAAtB;AACD;;AAED,SAAO,2CAAAqG,CAAIC,cAAJ,CAAmBF,SAAnB,EAA8BF,IAA9B,CAAP;AACD,E;;;;;;;ACpDD;;AAEA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH,yCAAyC;AACzC;AACA;;AAEA;AACA;;AAEA;;AAEA,8BAA8B,iGAAiG,EAAE;AACjI,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,CAAC,G;;;;;;ACtGD,qB;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEO,IAAMK,SAAS,sCAAf;AACA,IAAMvF,iBAAiB,8CAAvB;AACA,IAAMH,oBAAoB,qEAA1B,C","file":"json-schema-form-core.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmory imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmory exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tObject.defineProperty(exports, name, {\n \t\t\tconfigurable: false,\n \t\t\tenumerable: true,\n \t\t\tget: getter\n \t\t});\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 95a44b44d9c25bbc21fc","export { parse } from 'objectpath';\r\nexport { stringify } from 'objectpath';\r\nexport { normalize } from 'objectpath';\r\n\r\n/**\r\n * I am a name formatter function for processing keys into names for classes or Id.\r\n *\r\n * @param  {Array<string>} key         I am the key array of a processed schema key\r\n * @param  {string}        separator   I am the separator between the key items and optional form name\r\n * @param  {string}        formName    I am an optional form name\r\n * @param  {boolean}       omitNumbers I determine if numeric values should be included in the output or withheld\r\n *\r\n * @return {string}                    I am the formatted key\r\n */\r\nexport function name (key: Array<string>, separator?: string, formName = '', omitNumbers = false) {\r\n  if (key) {\r\n    let fieldKey = key.slice();\r\n    let fieldSeparator = separator || '-';\r\n\r\n    if (omitNumbers) {\r\n      fieldKey = fieldKey.filter(function(currentKey: any) {\r\n        return typeof currentKey !== 'number';\r\n      });\r\n    };\r\n\r\n    return ((formName.length !== 0)\r\n      ? formName + fieldSeparator\r\n      : ''\r\n    ) + fieldKey.join(fieldSeparator);\r\n  };\r\n\r\n  return '';\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/sf-path.js","// Takes a titleMap in either object or list format and returns one\r\n// in the list format.\r\nexport default function(titleMap: Array<any>, originalEnum?: any) {\r\n  if (!Array.isArray(titleMap)) {\r\n    const canonical = [];\r\n    if (originalEnum) {\r\n      originalEnum.forEach((value) => {\r\n        canonical.push({ name: titleMap[value], value });\r\n      });\r\n    } else {\r\n      Object.keys(titleMap).forEach((value) => {\r\n        canonical.push({ name: titleMap[value], value });\r\n      });\r\n    }\r\n    return canonical;\r\n  }\r\n  return titleMap;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/canonical-title-map.js","module.exports = require('./lib/ObjectPath.js').ObjectPath;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/objectpath/index.js\n// module id = 2\n// module chunks = 0","import {stringify, parse} from './sf-path';\r\nimport canonicalTitleMap from './canonical-title-map';\r\n\r\n// export function merge(schema, form, schemaDefaultTypes, ignore, options, readonly, asyncTemplates) {\r\nexport function merge(lookup, form, options, readonly, asyncTemplates) {\r\n  form  = form || [];\r\n  options = options || {};\r\n\r\n  // ok let's merge!\r\n  // We look at the supplied form and extend it with schema standards\r\n  return form.map((obj) => {\r\n\r\n    // handle the shortcut with just a name\r\n    if (typeof obj === 'string') {\r\n      obj = { key: obj };\r\n    }\r\n\r\n    if (obj.key) {\r\n      if (typeof obj.key === 'string') {\r\n        obj.key = parse(obj.key);\r\n      }\r\n    }\r\n\r\n    // If it has a titleMap make sure it's a list\r\n    if (obj.titleMap) {\r\n      obj.titleMap = canonicalTitleMap(obj.titleMap);\r\n    }\r\n\r\n    // extend with std form from schema.\r\n    if (obj.key) {\r\n      const strid = stringify(obj.key);\r\n      if (lookup[strid]) {\r\n        const schemaDefaults = lookup[strid];\r\n        if (schemaDefaults) {\r\n          Object.keys(schemaDefaults).forEach((attr) => {\r\n            if (obj[attr] === undefined) {\r\n              obj[attr] = schemaDefaults[attr];\r\n            }\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    // Are we inheriting readonly?\r\n    if (readonly === true) { // Inheriting false is not cool.\r\n      obj.readonly = true;\r\n    }\r\n\r\n    // if it's a type with items, merge 'em!\r\n    if (obj.items) {\r\n      obj.items = merge(lookup, obj.items, options, obj.readonly, asyncTemplates);\r\n    }\r\n\r\n    // if its has tabs, merge them also!\r\n    if (obj.tabs) {\r\n      obj.tabs.forEach((tab) => {\r\n        if (tab.items) {\r\n          tab.items = merge(lookup, tab.items, options, obj.readonly, asyncTemplates);\r\n        }\r\n      });\r\n    }\r\n\r\n    // Special case: checkbox\r\n    // Since have to ternary state we need a default\r\n    if (obj.type === 'checkbox' && obj.schema['default'] === undefined) {\r\n      obj.schema['default'] = false;\r\n    };\r\n\r\n    // Special case: template type with tempplateUrl that's needs to be loaded before rendering\r\n    // TODO: this is not a clean solution. Maybe something cleaner can be made when $ref support\r\n    // is introduced since we need to go async then anyway\r\n    if (asyncTemplates && obj.type === 'template' && !obj.template && obj.templateUrl) {\r\n      asyncTemplates.push(obj);\r\n    }\r\n\r\n    return obj;\r\n  });\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/merge.js","import { stringify } from './sf-path';\r\nimport canonicalTitleMap from './canonical-title-map';\r\n\r\n/* Utils */\r\nconst stripNullType = (type) => {\r\n  if (Array.isArray(type) && type.length === 2) {\r\n    if (type[0] === 'null') {\r\n      return type[1];\r\n    };\r\n    if (type[1] === 'null') {\r\n      return type[0];\r\n    };\r\n  };\r\n  return type;\r\n};\r\n\r\n// Creates an default titleMap list from an enum, i.e. a list of strings.\r\nconst enumToTitleMap = (enm) => {\r\n  const titleMap = []; // canonical titleMap format is a list.\r\n  enm.forEach((name) => {\r\n    titleMap.push({ name, value: name });\r\n  });\r\n  return titleMap;\r\n};\r\n\r\n/**\r\n * Creates a default form definition from a schema.\r\n */\r\nexport function defaultFormDefinition(schemaTypes, name, schema, options) {\r\n  const rules = schemaTypes[stripNullType(schema.type)];\r\n  if (rules) {\r\n    let def;\r\n    // We give each rule a possibility to recurse it's children.\r\n    const innerDefaultFormDefinition = (childName, childSchema , childOptions) =>\r\n                          defaultFormDefinition(schemaTypes, childName, childSchema, childOptions);\r\n    for (let i = 0; i < rules.length; i++) {\r\n      def = rules[i](name, schema, options, innerDefaultFormDefinition);\r\n\r\n      // first handler in list that actually returns something is our handler!\r\n      if (def) {\r\n\r\n        // Do we have form defaults in the schema under the x-schema-form-attribute?\r\n        if (def.schema['x-schema-form']) {\r\n          Object.assign(def, def.schema['x-schema-form']);\r\n        }\r\n\r\n        return def;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Creates a form object with all common properties\r\n */\r\nexport function stdFormObj(name, schema, options) {\r\n  options = options || {};\r\n\r\n  // The Object.assign used to be a angular.copy. Should work though.\r\n  const f = options.global && options.global.formDefaults ?\r\n          Object.assign({}, options.global.formDefaults) : {};\r\n  if (options.global && options.global.supressPropertyTitles === true) {\r\n    f.title = schema.title;\r\n  }\r\n  else {\r\n    f.title = schema.title || name;\r\n  }\r\n\r\n  if (schema.description) { f.description = schema.description; }\r\n  if (options.required === true || schema.required === true) { f.required = true; }\r\n  if (schema.maxLength) { f.maxlength = schema.maxLength; }\r\n  if (schema.minLength) { f.minlength = schema.minLength; }\r\n  if (schema.readOnly || schema.readonly) { f.readonly  = true; }\r\n  if (schema.minimum) { f.minimum = schema.minimum + (schema.exclusiveMinimum ? 1 : 0); }\r\n  if (schema.maximum) { f.maximum = schema.maximum - (schema.exclusiveMaximum ? 1 : 0); }\r\n\r\n  // Non standard attributes (DONT USE DEPRECATED)\r\n  // If you must set stuff like this in the schema use the x-schema-form attribute\r\n  if (schema.validationMessage) { f.validationMessage = schema.validationMessage; }\r\n  if (schema.enumNames) { f.titleMap = canonicalTitleMap(schema.enumNames, schema['enum']); }\r\n  f.schema = schema;\r\n\r\n  // Ng model options doesn't play nice with undefined, might be defined\r\n  // globally though\r\n  f.ngModelOptions = f.ngModelOptions || {};\r\n\r\n  return f;\r\n};\r\n\r\n/*** Schema types to form type mappings, with defaults ***/\r\nexport function text(name, schema, options) {\r\n  if (stripNullType(schema.type) === 'string' && !schema['enum']) {\r\n    const f = stdFormObj(name, schema, options);\r\n    f.key  = options.path;\r\n    f.type = 'text';\r\n    options.lookup[stringify(options.path)] = f;\r\n    return f;\r\n  }\r\n}\r\n\r\n// default in json form for number and integer is a text field\r\n// input type=\"number\" would be more suitable don't ya think?\r\nexport function number(name, schema, options) {\r\n  if (stripNullType(schema.type) === 'number') {\r\n    const f = stdFormObj(name, schema, options);\r\n    f.key  = options.path;\r\n    f.type = 'number';\r\n    options.lookup[stringify(options.path)] = f;\r\n    return f;\r\n  }\r\n}\r\n\r\nexport function integer(name, schema, options) {\r\n  if (stripNullType(schema.type) === 'integer') {\r\n    const f = stdFormObj(name, schema, options);\r\n    f.key  = options.path;\r\n    f.type = 'number';\r\n    options.lookup[stringify(options.path)] = f;\r\n    return f;\r\n  }\r\n}\r\n\r\nexport function checkbox(name, schema, options) {\r\n  if (stripNullType(schema.type) === 'boolean') {\r\n    const f = stdFormObj(name, schema, options);\r\n    f.key  = options.path;\r\n    f.type = 'checkbox';\r\n    options.lookup[stringify(options.path)] = f;\r\n    return f;\r\n  }\r\n}\r\n\r\nexport function select(name, schema, options) {\r\n  if (stripNullType(schema.type) === 'string' && schema['enum']) {\r\n    const f = stdFormObj(name, schema, options);\r\n    f.key  = options.path;\r\n    f.type = 'select';\r\n    if (!f.titleMap) {\r\n      f.titleMap = enumToTitleMap(schema['enum']);\r\n    }\r\n    options.lookup[stringify(options.path)] = f;\r\n    return f;\r\n  }\r\n}\r\n\r\nexport function checkboxes(name, schema, options) {\r\n  if (stripNullType(schema.type) === 'array' && schema.items && schema.items['enum']) {\r\n    const f = stdFormObj(name, schema, options);\r\n    f.key  = options.path;\r\n    f.type = 'checkboxes';\r\n    if (!f.titleMap) {\r\n      f.titleMap = enumToTitleMap(schema.items['enum']);\r\n    }\r\n    options.lookup[stringify(options.path)] = f;\r\n    return f;\r\n  }\r\n}\r\n\r\nexport function fieldset(name, schema, options, defaultFormDef) {\r\n  if (stripNullType(schema.type) === 'object') {\r\n    const f   = stdFormObj(name, schema, options);\r\n    f.type  = 'fieldset';\r\n    f.key   = options.path;\r\n    f.items = [];\r\n    options.lookup[stringify(options.path)] = f;\r\n\r\n    // recurse down into properties\r\n    if (schema.properties) {\r\n      Object.keys(schema.properties).forEach((key) => {\r\n        const value = schema.properties[key];\r\n        const path = options.path.slice();\r\n        path.push(key);\r\n        if (options.ignore[stringify(path)] !== true) {\r\n          const required = schema.required && schema.required.indexOf(key) !== -1;\r\n\r\n          const def = defaultFormDef(key, value, {\r\n            path,\r\n            required: required || false,\r\n            lookup: options.lookup,\r\n            ignore: options.ignore,\r\n            global: options.global\r\n          });\r\n          if (def) {\r\n            f.items.push(def);\r\n          }\r\n        }\r\n      });\r\n    }\r\n    return f;\r\n  }\r\n}\r\n\r\nexport function array(name, schema, options, defaultFormDef) {\r\n  if (stripNullType(schema.type) === 'array') {\r\n    const f   = stdFormObj(name, schema, options);\r\n    f.type  = 'array';\r\n    f.key   = options.path;\r\n    options.lookup[stringify(options.path)] = f;\r\n\r\n    const required = schema.required &&\r\n                   schema.required.indexOf(options.path[options.path.length - 1]) !== -1;\r\n\r\n    // The default is to always just create one child. This works since if the\r\n    // schemas items declaration is of type: \"object\" then we get a fieldset.\r\n    // We also follow json form notatation, adding empty brackets \"[]\" to\r\n    // signify arrays.\r\n\r\n    const arrPath = options.path.slice();\r\n    arrPath.push('');\r\n\r\n    f.items = [\r\n      defaultFormDef(name, schema.items, {\r\n        path: arrPath,\r\n        required: required || false,\r\n        lookup: options.lookup,\r\n        ignore: options.ignore,\r\n        global: options.global\r\n      })\r\n    ];\r\n\r\n    return f;\r\n  }\r\n}\r\n\r\nexport function createDefaults() {\r\n  // First sorted by schema type then a list.\r\n  // Order has importance. First handler returning an form snippet will be used.\r\n  return {\r\n    string:  [ select, text ],\r\n    object:  [ fieldset ],\r\n    number:  [ number ],\r\n    integer: [ integer ],\r\n    boolean: [ checkbox ],\r\n    array:   [ checkboxes, array ]\r\n  };\r\n};\r\n\r\n/**\r\n * Create form defaults from schema\r\n */\r\nexport function defaultForm(schema: any, defaultSchemaTypes: any, ignore?: any, globalOptions?: any) {\r\n  const form   = [];\r\n  const lookup = {}; // Map path => form obj for fast lookup in merging\r\n  ignore = ignore || {};\r\n  globalOptions = globalOptions || {};\r\n  defaultSchemaTypes = defaultSchemaTypes || createDefaults();\r\n\r\n  if (schema.properties) {\r\n    Object.keys(schema.properties).forEach((key) => {\r\n      if (ignore[key] !== true) {\r\n        const required = schema.required && schema.required.indexOf(key) !== -1;\r\n        const def = defaultFormDefinition(defaultSchemaTypes, key, schema.properties[key], {\r\n          path: [ key ],         // Path to this property in bracket notation.\r\n          lookup: lookup,    // Extra map to register with. Optimization for merger.\r\n          ignore: ignore,    // The ignore list of paths (sans root level name)\r\n          required: required, // Is it required? (v4 json schema style)\r\n          global: globalOptions // Global options, including form defaults\r\n        });\r\n        if (def) {\r\n          form.push(def);\r\n        }\r\n      }\r\n    });\r\n  }\r\n  else {\r\n    throw new Error('Not implemented. Only type \"object\" allowed at root level of schema.');\r\n  }\r\n  return { form: form, lookup: lookup };\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/schema-defaults.js","import * as sfPath from './sf-path';\r\n\r\nconst numRe = /^\\d+$/;\r\n\r\n/**\r\n  * @description\r\n  * Utility method to access deep properties without\r\n  * throwing errors when things are not defined.\r\n  * Can also set a value in a deep structure, creating objects when missing\r\n  * ex.\r\n  * var foo = Select('address.contact.name',obj)\r\n  * Select('address.contact.name',obj,'Leeroy')\r\n  *\r\n  * @param {string} projection A dot path to the property you want to get/set\r\n  * @param {object} obj   (optional) The object to project on, defaults to 'this'\r\n  * @param {Any}    valueToSet (opional)  The value to set, if parts of the path of\r\n  *                 the projection is missing empty objects will be created.\r\n  * @returns {Any|undefined} returns the value at the end of the projection path\r\n  *                          or undefined if there is none.\r\n  */\r\nexport function select(projection, obj, valueToSet) {\r\n  if (!obj) {\r\n    obj = this;\r\n  };\r\n\r\n  // Support [] array syntax\r\n  let parts = typeof projection === 'string' ? sfPath.parse(projection) : projection;\r\n\r\n  if (typeof valueToSet !== 'undefined' && parts.length === 1) {\r\n    // special case, just setting one variable\r\n    obj[parts[0]] = valueToSet;\r\n    return obj;\r\n  };\r\n\r\n  if (typeof valueToSet !== 'undefined' &&\r\n      typeof obj[parts[0]] === 'undefined') {\r\n    // We need to look ahead to check if array is appropriate\r\n    obj[parts[0]] = parts.length > 2 && numRe.test(parts[1]) ? [] : {};\r\n  };\r\n\r\n  let value = obj[parts[0]];\r\n  for (let i = 1; i < parts.length; i++) {\r\n    // Special case: We allow JSON Form syntax for arrays using empty brackets\r\n    // These will of course not work here so we exit if they are found.\r\n    if (parts[i] === '') {\r\n      return undefined;\r\n    }\r\n    if (typeof valueToSet !== 'undefined') {\r\n      if (i === parts.length - 1) {\r\n        // last step. Let's set the value\r\n        value[parts[i]] = valueToSet;\r\n        return valueToSet;\r\n      } else {\r\n        // Make sure to create new objects on the way if they are not there.\r\n        // We need to look ahead to check if array is appropriate\r\n        let tmp = value[parts[i]];\r\n        if (typeof tmp === 'undefined' || tmp === null) {\r\n          tmp = numRe.test(parts[i + 1]) ? [] : {};\r\n          value[parts[i]] = tmp;\r\n        }\r\n        value = tmp;\r\n      }\r\n    } else if (value) {\r\n      // Just get nex value.\r\n      value = value[parts[i]];\r\n    }\r\n  }\r\n  return value;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/select.js","/**\r\n * Traverse a schema, applying a function(schema,path) on every sub schema\r\n * i.e. every property of an object.\r\n */\r\nexport function traverseSchema(schema, fn, path, ignoreArrays) {\r\n  ignoreArrays = ignoreArrays === undefined ? true : ignoreArrays;\r\n\r\n  path = path || [];\r\n\r\n  const traverse = function(schemaObject: any, processorFunction: Function, pathArray: Array<string>) {\r\n    processorFunction(schemaObject, pathArray);\r\n    if (schemaObject.properties) {\r\n      Object.keys(schemaObject.properties).forEach((name) => {\r\n        const currentPath = pathArray.slice();\r\n        currentPath.push(name);\r\n        traverse(schemaObject.properties[name], processorFunction, currentPath);\r\n      });\r\n    }\r\n\r\n    // Only support type \"array\" which have a schemaObject as \"items\".\r\n    if (!ignoreArrays && schemaObject.items) {\r\n      const arrPath = pathArray.slice(); arrPath.push('');\r\n      traverse(schemaObject.items, processorFunction, arrPath);\r\n    }\r\n  };\r\n\r\n  traverse(schema, fn, path || []);\r\n}\r\n\r\nexport function traverseForm(form, fn) {\r\n  fn(form);\r\n  if (form.items) {\r\n    form.items.forEach((f) => {\r\n      traverseForm(f, fn);\r\n    });\r\n  }\r\n\r\n  if (form.tabs) {\r\n    form.tabs.forEach((tab) => {\r\n      if (tab.items) {\r\n        tab.items.forEach((f) => {\r\n          traverseForm(f, fn);\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/traverse.js","/*  Common code for validating a value against its form and schema definition */\r\nimport tv4 from 'tv4';\r\n\r\n/**\r\n * Validate a value against its form definition and schema.\r\n * The value should either be of proper type or a string, some type\r\n * coercion is applied.\r\n *\r\n * @param {Object} form A merged form definition, i.e. one with a schema.\r\n * @param {Any} value the value to validate.\r\n * @return {Object} a tv4js result object.\r\n */\r\nexport function validate(form, value) {\r\n  if (!form) {\r\n    return { valid: true };\r\n  };\r\n\r\n  let schema = form.schema;\r\n  if (!schema) {\r\n    return { valid: true };\r\n  };\r\n\r\n  // Input of type text and textareas will give us a viewValue of ''\r\n  // when empty, this is a valid value in a schema and does not count as something\r\n  // that breaks validation of 'required'. But for our own sanity an empty field should\r\n  // not validate if it's required.\r\n  if (value === '') {\r\n    value = undefined;\r\n  };\r\n\r\n  // Numbers fields will give a null value, which also means empty field\r\n  if (form.type === 'number' && value === null) {\r\n    value = undefined;\r\n  };\r\n\r\n  // Version 4 of JSON Schema has the required property not on the\r\n  // property itself but on the wrapping object. Since we like to test\r\n  // only this property we wrap it in a fake object.\r\n  let wrap = { type: 'object', 'properties': {}, required: undefined};\r\n  let propName = form.key[form.key.length - 1];\r\n  wrap.properties[propName] = schema;\r\n\r\n  if (form.required) {\r\n    wrap.required = [ propName ];\r\n  };\r\n\r\n  let valueWrap = {};\r\n  if (!!value) {\r\n    valueWrap[propName] = value;\r\n  };\r\n\r\n  return tv4.validateResult(valueWrap, wrap);\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/validate.js","'use strict';\n\n;!function(undefined) {\n\n\tvar ObjectPath = {\n\t\tparse: function(str){\n\t\t\tif(typeof str !== 'string'){\n\t\t\t\tthrow new TypeError('ObjectPath.parse must be passed a string');\n\t\t\t}\n\n\t\t\tvar i = 0;\n\t\t\tvar parts = [];\n\t\t\tvar d, b, q, c;\n\t\t\twhile (i < str.length){\n\t\t\t\td = str.indexOf('.', i);\n\t\t\t\tb = str.indexOf('[', i);\n\n\t\t\t\t// we've reached the end\n\t\t\t\tif (d === -1 && b === -1){\n\t\t\t\t\tparts.push(str.slice(i, str.length));\n\t\t\t\t\ti = str.length;\n\t\t\t\t}\n\n\t\t\t\t// dots\n\t\t\t\telse if (b === -1 || (d !== -1 && d < b)) {\n\t\t\t\t\tparts.push(str.slice(i, d));\n\t\t\t\t\ti = d + 1;\n\t\t\t\t}\n\n\t\t\t\t// brackets\n\t\t\t\telse {\n\t\t\t\t\tif (b > i){\n\t\t\t\t\t\tparts.push(str.slice(i, b));\n\t\t\t\t\t\ti = b;\n\t\t\t\t\t}\n\t\t\t\t\tq = str.slice(b+1, b+2);\n\t\t\t\t\tif (q !== '\"' && q !=='\\'') {\n\t\t\t\t\t\tc = str.indexOf(']', b);\n\t\t\t\t\t\tif (c === -1) c = str.length;\n\t\t\t\t\t\tparts.push(str.slice(i + 1, c));\n\t\t\t\t\t\ti = (str.slice(c + 1, c + 2) === '.') ? c + 2 : c + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tc = str.indexOf(q+']', b);\n\t\t\t\t\t\tif (c === -1) c = str.length;\n\t\t\t\t\t\twhile (str.slice(c - 1, c) === '\\\\' && b < str.length){\n\t\t\t\t\t\t\tb++;\n\t\t\t\t\t\t\tc = str.indexOf(q+']', b);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tparts.push(str.slice(i + 2, c).replace(new RegExp('\\\\'+q,'g'), q));\n\t\t\t\t\t\ti = (str.slice(c + 2, c + 3) === '.') ? c + 3 : c + 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn parts;\n\t\t},\n\n\t\t// root === true : auto calculate root; must be dot-notation friendly\n\t\t// root String : the string to use as root\n\t\tstringify: function(arr, quote){\n\n\t\t\tif(!Array.isArray(arr))\n\t\t\t\tarr = [arr.toString()];\n\n\t\t\tquote = quote === '\"' ? '\"' : '\\'';\n\n\t\t\treturn arr.map(function(n){ return '[' + quote + (n.toString()).replace(new RegExp(quote, 'g'), '\\\\' + quote) + quote + ']'; }).join('');\n\t\t},\n\n\t\tnormalize: function(data, quote){\n\t\t\treturn ObjectPath.stringify(Array.isArray(data) ? data : ObjectPath.parse(data), quote);\n\t\t},\n\n\t\t// Angular\n\t\tregisterModule: function(angular) {\n\t\t\tangular.module('ObjectPath', []).provider('ObjectPath', function(){\n\t\t\t\tthis.parse = ObjectPath.parse;\n\t\t\t\tthis.stringify = ObjectPath.stringify;\n\t\t\t\tthis.normalize = ObjectPath.normalize;\n\t\t\t\tthis.$get = function(){\n\t\t\t\t\treturn ObjectPath;\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t};\n\n\t// AMD\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(function() {\n\t\t\treturn {ObjectPath: ObjectPath};\n\t\t});\n\t}\n\n\t// CommonJS\n\telse if (typeof exports === 'object') {\n\t\texports.ObjectPath = ObjectPath;\n\t}\n\n\t// Browser global\n\telse {\n\t\twindow.ObjectPath = ObjectPath;\n\t}\n\t\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/objectpath/lib/ObjectPath.js\n// module id = 8\n// module chunks = 0","module.exports = tv4;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"tv4\"\n// module id = 9\n// module chunks = 0","import * as schemaDefaultsImp from './schema-defaults';\r\nimport * as sfPathImp from './sf-path';\r\nimport canonicalTitleMapImp from './canonical-title-map';\r\n\r\nexport { merge } from './merge';\r\nexport { select }  from './select';\r\nexport { traverseSchema, traverseForm } from './traverse';\r\nexport { validate } from './validate';\r\n\r\nexport const sfPath = sfPathImp;\r\nexport const schemaDefaults = schemaDefaultsImp;\r\nexport const canonicalTitleMap = canonicalTitleMapImp;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/index.js"],"sourceRoot":""}